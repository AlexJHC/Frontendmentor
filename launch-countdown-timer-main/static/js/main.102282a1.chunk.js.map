{"version":3,"sources":["img/icon-facebook.svg","img/icon-instagram.svg","img/icon-pinterest.svg","Counter/FlipUnitContainer.js","Counter/FlipClock.js","App.js","reportWebVitals.js","index.js"],"names":["FlipUnitContainer","digit","shuffle","currentDigit","previousDigit","unit","digit1","digit2","animation1","animation2","className","FlipClock","props","state","counter","days","daysShuffle","hours","hoursShuffle","minutes","minutesShuffle","seconds","secondsShuffle","this","timerID","setInterval","updateTime","clearInterval","setState","Math","floor","React","Component","App","href","src","iconFacebook","alt","iconInstagram","iconPinterest","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.102282a1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-facebook.a9208377.svg\";","export default __webpack_public_path__ + \"static/media/icon-instagram.b94ff26a.svg\";","export default __webpack_public_path__ + \"static/media/icon-pinterest.ea0db8e7.svg\";","// function component\r\nexport default function FlipUnitContainer({ digit, shuffle, unit }) {\t\r\n  \r\n  // assign digit values\r\n  let currentDigit = digit ;\r\n  let previousDigit = digit + 1;\r\n\r\n  // to prevent a negative value\r\n  if ( unit !== 'hours') {\r\n    previousDigit = previousDigit === -1 \r\n      ? 59 \r\n      : previousDigit;\r\n  } else {\r\n    previousDigit = previousDigit === -1 \r\n      ? 23 \r\n      : previousDigit;\r\n  }\r\n\r\n  // add zero\r\n  if ( currentDigit < 10 ) {\r\n    currentDigit = `0${currentDigit}`;\r\n  } \r\n  if ( previousDigit < 10 ) {\r\n    previousDigit = `0${previousDigit}`;\r\n  }\r\n\r\n  // shuffle digits\r\n  const digit1 = shuffle \r\n    ? previousDigit \r\n    : currentDigit;\r\n  const digit2 = !shuffle \r\n    ? previousDigit \r\n    : currentDigit;\r\n\r\n  // shuffle animations\r\n  const animation1 = shuffle \r\n    ? 'fold' \r\n    : 'unfold';\r\n  const animation2 = !shuffle \r\n    ? 'fold' \r\n    : 'unfold';\r\n\r\n  return(\r\n    <div className={'flipUnitContainer'}>\r\n      <div className='upperCard'>\r\n        <span>{currentDigit}</span>\r\n      </div>\r\n      <div className='lowerCard'>\r\n        <span>{previousDigit}</span>\r\n      </div>\r\n      <div className={`flipCard ${animation1}`}>\r\n        <span>{digit1}</span>\r\n      </div>\r\n      <div className={`flipCard ${animation2}`}>\r\n        <span>{digit2}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n","import FlipUnitContainer from './FlipUnitContainer'\r\nimport React from 'react'\r\n\r\n\r\nexport default class FlipClock extends React.Component {\r\n  constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      counter: 8854200,\r\n      days: 0,\r\n\t\t\tdaysShuffle: true,\r\n\t\t\thours: 0,\r\n\t\t\thoursShuffle: true,\r\n\t\t\tminutes: 0,\r\n\t\t\tminutesShuffle: true,\r\n\t\t\tseconds: 0,\r\n\t\t\tsecondsShuffle: true\r\n\t\t};\r\n\t}\r\n    \r\n\tcomponentDidMount() {\r\n\t\tthis.timerID = setInterval(\r\n\t\t\t() => this.updateTime(),\r\n\t\t\t50\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.timerID);\r\n\t}\r\n\r\n\tupdateTime() {\r\n    let counter = this.state.counter - 50\r\n    this.setState({counter});\r\n    if (counter <= 0) {\r\n      this.setState({counter:8200000000});\r\n    }\r\n\r\n    const days = Math.floor(counter / (1000 * 60 * 60 * 24));\r\n    const hours = Math.floor((counter % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n    const minutes = Math.floor((counter % (1000 * 60 * 60)) / (1000 * 60));\r\n    const seconds = Math.floor((counter % (1000 * 60)) / 1000);\r\n    \r\n    // on days chanage, update hours and shuffle state\r\n\t\tif( days !== this.state.days) {\r\n\t\t\tconst daysShuffle = !this.state.daysShuffle;\r\n\t\t\tthis.setState({\r\n\t\t\t\tdays,\r\n\t\t\t\tdaysShuffle\r\n\t\t\t});\r\n\t\t}\r\n\t\t// on hour chanage, update hours and shuffle state\r\n\t\tif( hours !== this.state.hours) {\r\n\t\t\tconst hoursShuffle = !this.state.hoursShuffle;\r\n\t\t\tthis.setState({\r\n\t\t\t\thours,\r\n\t\t\t\thoursShuffle\r\n\t\t\t});\r\n\t\t}\r\n\t\t// on minute chanage, update minutes and shuffle state\r\n\t\tif( minutes !== this.state.minutes) {\r\n\t\t\tconst minutesShuffle = !this.state.minutesShuffle;\r\n\t\t\tthis.setState({\r\n\t\t\t\tminutes,\r\n\t\t\t\tminutesShuffle\r\n\t\t\t});\r\n\t\t}\r\n\t\t// on second chanage, update seconds and shuffle state\r\n\t\tif( seconds !== this.state.seconds) {\r\n\t\t\tconst secondsShuffle = !this.state.secondsShuffle;\r\n\t\t\tthis.setState({\r\n\t\t\t\tseconds,\r\n\t\t\t\tsecondsShuffle\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n  \r\n\trender() {\r\n    // state object destructuring\r\n\t\tconst { \r\n      days,\r\n      hours, \r\n      minutes, \r\n      seconds, \r\n      daysShuffle, \r\n      hoursShuffle, \r\n      minutesShuffle, \r\n      secondsShuffle \r\n    } = this.state;\r\n\t\t\r\n    return(\r\n\t\t\t<div className={'flipClock'}>\r\n        <div className=\"flipConteiner\">\r\n        <FlipUnitContainer \r\n\t\t\t\t\tunit={'days'}\r\n\t\t\t\t\tdigit={days} \r\n\t\t\t\t\tshuffle={daysShuffle} \r\n\t\t\t\t\t/>\r\n          <span className='flipText'>DAYS</span>\r\n          </div>\r\n          <div className=\"flipConteiner\">\r\n\t\t\t\t<FlipUnitContainer \r\n\t\t\t\t\tunit={'hours'}\r\n\t\t\t\t\tdigit={hours} \r\n\t\t\t\t\tshuffle={hoursShuffle} \r\n\t\t\t\t\t/>\r\n          <span className='flipText'>HOURS</span>\r\n          </div>\r\n          <div className=\"flipConteiner\">\r\n\t\t\t\t<FlipUnitContainer \r\n\t\t\t\t\tunit={'minutes'}\r\n\t\t\t\t\tdigit={minutes} \r\n\t\t\t\t\tshuffle={minutesShuffle} \r\n\t\t\t\t\t/>\r\n          <span className='flipText'>MINUTES</span>\r\n          </div>\r\n          <div className=\"flipConteiner\">\r\n\t\t\t\t<FlipUnitContainer \r\n\t\t\t\t\tunit={'seconds'}\r\n\t\t\t\t\tdigit={seconds} \r\n\t\t\t\t\tshuffle={secondsShuffle}\r\n           />\r\n           <span className='flipText'>SECONDS</span>\r\n           </div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import './App.css';\r\nimport iconFacebook from './img/icon-facebook.svg'\r\nimport iconInstagram from './img/icon-instagram.svg'\r\nimport iconPinterest from './img/icon-pinterest.svg'\r\nimport FlipClock from './Counter/FlipClock'\r\n\r\nfunction App() {\r\n  return (\r\n    <main className='main'>\r\n      \r\n        <h1>WE'RE LAUNCHING SOON</h1>\r\n        <FlipClock />\r\n        <footer>\r\n          <ul>\r\n            <li><a href=\"!#\"><img src={iconFacebook} alt={'Facebook icon'} /></a></li>\r\n            <li><a href=\"!#\"><img src={iconInstagram} alt={'Instagram icon'} /></a></li>\r\n            <li><a href=\"!#\"><img src={iconPinterest} alt={'Pinterest icon'} /></a></li>\r\n          </ul>\r\n        </footer>\r\n     \r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App; \r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}